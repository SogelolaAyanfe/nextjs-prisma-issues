// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["darwin", "native", "linux-arm64-openssl-3.0.x", "debian-openssl-1.1.x", "debian-openssl-3.0.x"]
  previewFeatures = ["fullTextSearchPostgres"]
  schema          = ["./schema.prisma", "./modules/domain/*/*.prisma"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_DIRECT_URL")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  avatar    String?
  posts     Post[]
  blog      Blog[]
  createdAt DateTime @default(now()) @db.Timestamp(3)
  updatedAt DateTime @updatedAt @db.Timestamp(3)
}

model Post {
  id          String   @id @default(uuid())
  title       String
  img         String
  description String
  content     String
  createdAt   DateTime @default(now()) @db.Timestamp(3)
  updatedAt   DateTime @db.Timestamp(3)
  User        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

// model Blog {
//   id          String   @id @default(uuid())
//   title       String
//   userId      String
//   description String
//   text        String
//   image       String
//   createdAt   DateTime @default(now()) @db.Timestamp(3)
//   updatedAt   DateTime @updatedAt @db.Timestamp(3)
//   User        User     @relation(fields: [userId], references: [id])
// }
